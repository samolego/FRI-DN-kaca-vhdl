----------------------------------                    
-- GENERATED CODE                    
-- Do not edit this file directly                    
----------------------------------
-- Generated on 03/01/2024 10:36:21
library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.NUMERIC_STD.all;

entity index2sprite is
    port (
        sprite_index : in std_logic_vector (4 downto 0);
        sprite_image_bits : out std_logic_vector (255 downto 0)
    );
end entity;
architecture Behavioral of index2sprite is

begin

    with sprite_index select sprite_image_bits <=
        
        "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" when "00000",
        "0000000000000000000000000000000011111111100000001011111011110000101111010111110011011101011101101101111011111010110111111111101111011111111110111101111011111010110111010111011010111101011111001011111011110000111111111000000000000000000000000000000000000000" when "00100",
        "0000000110000000000001111110000000001100001100000000101111010000000111111111100000011111111110000001111111111000001100111100110000101101101101000011001111001100001111111111110000111111111111000011111111111100001110000001110000100111111001000011111111111100" when "00101",
        "0000000000000000000000000000000000000001111111110000111101111101001111101011110101101110101110110101111101111011110111111111101111011111111110110101111101111011011011101011101100111110101111010000111101111101000000011111111100000000000000000000000000000000" when "00110",
        "0011111111111100001001111110010000111000000111000011111111111100001111111111110000111111111111000011001111001100001011011011010000110011110011000001111111111000000111111111100000011111111110000000101111010000000011000011000000000111111000000000000110000000" when "00111",
        "0000000000000000000000000000000000000000000000010011000000000111010111000000111101110111001110110111011111111011010011111011110101111111011111010111111101111101011111001111101100111011111110110000111111111111000000011111111100000000000000000000000000000000" when "01000",
        "0011111111111100000111100011110000011001110011000000111111111100000001111111110000000111111111000000001011111100000000110011110000000111110111000000011111011000000011111110100000001001111110000001111011110000000101101111000000001111111000000000000000000000" when "01001",
        "0000000000000000000000000000000010000000000000001110000000001100111100000011101011011100111011101101111111101110101111011111001010111110111111101011111011111110110111110011111011011111110111001111111111110000111111111000000000000000000000000000000000000000" when "01010",
        "0000000000000000000001111111000000001111011010000000111101111000000111111001000000010111111100000001101111100000001110111110000000111100110000000011111101000000001111111110000000111111111000000011111111110000001100111001100000111100011110000011111111111100" when "01011",
        "0011111111111100001001111110010000111001100111110011111001111101001111111111100100111111111110110001111111110011000111111110011100011111110011110000111100011111000011100111111100000111111111110000000111111111000000000011111100000000000000000000000000000000" when "01100",
        "0011111111111100001001111111110011110001111111001011110011111100101111100111110011011111001111001101111110111000111011111001100011101111110110001101111111110000110111111111000010111111111000001011111110000000111111000000000000000000000000000000000000000000" when "01101",
        "0000000000000000000000000000000011111100000000001111111110000000111111111110000011111110011100001111100011110000111100111111100011100111111110001100111111111000110111111111110010011111111111001011111001111100111110011001110000100111111001000011111111111100" when "01110",
        "0000000000000000000000000000000000000000001111110000000111111101000001111111110100001111111110110000111111111011000110111111011100011001111101110001110111111011001111001111101100111110011111010011111100111101001111111000111100111111111001000011111111111100" when "01111",
        "0000000000000000000000000000000011111111111111111101111011110111110111101111011111101111011100111110111110111011111101111011100111110111101110011110111110111011111011110111001111011110111101111101111011110111111111111111111100000000000000000000000000000000" when "10000",
        "0011111111111100001111100111110000111000000111000010001111000100001111111111110000111111111111000011110000111100001110111101110000100111111001000011111111111100001111111111110000111110011111000011100110011100001001111110010000111111111111000011111111111100" when "10001",
        "0000000000000000000000000000000011111111111111111110111101111011111011110111101111001110111101111101110111110111100111011110111110011101111011111101110111110111110011101111011111101111011110111110111101111011111111111111111100000000000000000000000000000000" when "10010",
        "0011111111111100001111111111110000100111111001000011100110011100001111100111110000111111111111000011111111111100001001111110010000111011110111000011110000111100001111111111110000111111111111000010001111000100001110000001110000111110011111000011111111111100" when "10011",
        "0000000000000000000000001110000000000001000000000000001111000000000011111111000000011111111110000001100111111000000000001111110000000000011111000000000001111100000000001111110000011001111110000001111111111000000011111111000000000011110000000000000000000000" when "11111",
        (others => '0') when others;

end Behavioral;
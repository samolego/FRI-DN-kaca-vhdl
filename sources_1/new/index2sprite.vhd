----------------------------------                    
-- GENERATED CODE                    
-- Do not edit this file directly                    
----------------------------------
-- Generated on 10/01/2024 10:08:56
library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.NUMERIC_STD.all;

entity index2sprite is
    port (
        sprite_index : in std_logic_vector (4 downto 0);
        sprite_image_bits : out std_logic_vector (0 to 255)
    );
end entity;
architecture Behavioral of index2sprite is

begin

    with sprite_index select sprite_image_bits <=
        
        "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111" when "00000",
        "1111111111111111111111111111111100000000011111110100000100001111010000101000001100100010100010010010000100000101001000000000010000100000000001000010000100000101001000101000100101000010100000110100000100001111000000000111111111111111111111111111111111111111" when "00100",
        "1111111001111111111110000001111111110011110011111111010000101111111000000000011111100000000001111110000000000111110011000011001111010010010010111100110000110011110000000000001111000000000000111100000000000011110001111110001111011000000110111100000000000011" when "00101",
        "1111111111111111111111111111111111111110000000001111000010000010110000010100001010010001010001001010000010000100001000000000010000100000000001001010000010000100100100010100010011000001010000101111000010000010111111100000000011111111111111111111111111111111" when "00110",
        "1100000000000011110110000001101111000111111000111100000000000011110000000000001111000000000000111100110000110011110100100100101111001100001100111110000000000111111000000000011111100000000001111111010000101111111100111100111111111000000111111111111001111111" when "00111",
        "1111111111111111111111111111111111111111111111101100111111111000101000111111000010001000110001001000100000000100101100000100001010000000100000101000000010000010100000110000010011000100000001001111000000000000111111100000000011111111111111111111111111111111" when "01000",
        "1100000000000011111000011100001111100110001100111111000000000011111110000000001111111000000000111111110100000011111111001100001111111000001000111111100000100111111100000001011111110110000001111110000100001111111010010000111111110000000111111111111111111111" when "01001",
        "1111111111111111111111111111111101111111111111110001111111110011000011111100010100100011000100010010000000010001010000100000110101000001000000010100000100000001001000001100000100100000001000110000000000001111000000000111111111111111111111111111111111111111" when "01010",
        "1111111111111111111110000000111111110000100101111111000010000111111000000110111111101000000011111110010000011111110001000001111111000011001111111100000010111111110000000001111111000000000111111100000000001111110011000110011111000011100001111100000000000011" when "01011",
        "1100000000000011110000000001001111000000011000001100000110000000110001100000001011001000000001101110000000001100111000000001100011100000001100001111000001100000111100001100000011111000100000001111111000000000111111111100000011111111111111111111111111111111" when "01100",
        "1100000000000011110010000000001100000110000000110000000110000011010000000110001101100000000100110011000000000111000110000000011100001100000001110000011000001111000000110000111100000001000111110000000001111111000000111111111111111111111111111111111111111111" when "01101",
        "1111111111111111111111111111111100000011111111110000000001111111000000010001111100000011000011110000011000001111000011000000011100011000000001110011000000000111011000000001001101000000011000110000000110000011000001100000001111001000000000111100000000000011" when "01110",
        "1111111111111111111111111111111111111111110000001111111000000000111110001000000011110000110000001111000001100000111000000011000011100000000110001110000000001100110010000000011011000110000000101100000110000000110000000110000011000000000100111100000000000011" when "01111",
        "1111111111111111111111111111111100000000000000000010000100001000001000010000100000010000100011000001000001000100000010000100011000001000010001100001000001000100000100001000110000100001000010000010000100001000000000000000000011111111111111111111111111111111" when "10000",
        "1100000000000011110000011000001111000111111000111101110000111011110000000000001111000000000000111100001111000011110001000010001111011000000110111100000000000011110000000000001111000001100000111100011001100011110110000001101111000000000000111100000000000011" when "10001",
        "1111111111111111111111111111111100000000000000000001000010000100000100001000010000110001000010000010001000001000011000100001000001100010000100000010001000001000001100010000100000010000100001000001000010000100000000000000000011111111111111111111111111111111" when "10010",
        "1100000000000011110000000000001111011000000110111100011001100011110000011000001111000000000000111100000000000011110110000001101111000100001000111100001111000011110000000000001111000000000000111101110000111011110001111110001111000001100000111100000000000011" when "10011",
        "1111111111111111111111110001111111111110111111111111110000111111111100000000111111100000000001111110011000000111111111110000001111111111100000111111111110000011111111110000001111100110000001111110000000000111111100000000111111111100001111111111111111111111" when "11111",
        (others => '1') when others;

end Behavioral;